{"ast":null,"code":"var _jsxFileName = \"/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/RoomVisualizer/RoomVisualizer.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomVisualizer({\n  roomData,\n  floorImage\n}) {\n  // Assuming roomData contains dimensions in inches\n  const {\n    width,\n    length,\n    doorPosition,\n    windowWall,\n    windowPosition\n  } = roomData;\n\n  // Define the scale factor (1 inch = 10 SVG units)\n  const scaleFactor = 5;\n\n  // Door and window widths\n  const doorWidthInches = 32;\n  const windowWidthInches = 22;\n\n  // Convert inch measurements to SVG units\n  const roomWidth = width * scaleFactor;\n  const roomLength = length * scaleFactor;\n\n  // Calculate the width and height of the door and window proportionate to the room\n  const doorWidth = doorWidthInches * scaleFactor;\n  const doorHeight = 32 * scaleFactor; // Assuming door height is 80 inches, adjust as needed\n  const windowHeight = 2; // Height of the window line\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: roomWidth,\n    height: roomLength,\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n        id: \"floorPattern\",\n        patternUnits: \"userSpaceOnUse\",\n        width: \"100\",\n        height: \"100\",\n        children: /*#__PURE__*/_jsxDEV(\"image\", {\n          href: floorImage,\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: roomWidth,\n      height: roomLength,\n      fill: \"url(#floorPattern)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: roomWidth,\n      height: roomLength,\n      fill: \"transparent\",\n      stroke: \"black\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: doorPosition * scaleFactor,\n      width: 2 * scaleFactor,\n      height: doorWidth,\n      fill: \"brown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), windowWall === 'top' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: windowPosition * scaleFactor,\n      y: \"0\",\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), windowWall === 'bottom' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: windowPosition * scaleFactor,\n      y: roomLength - windowHeight,\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), windowWall === 'left' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: windowPosition * scaleFactor,\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), windowWall === 'right' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: roomWidth - windowWidthInches * scaleFactor,\n      y: windowPosition * scaleFactor,\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = RoomVisualizer;\nexport default RoomVisualizer;\nvar _c;\n$RefreshReg$(_c, \"RoomVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RoomVisualizer","roomData","floorImage","width","length","doorPosition","windowWall","windowPosition","scaleFactor","doorWidthInches","windowWidthInches","roomWidth","roomLength","doorWidth","doorHeight","windowHeight","height","children","id","patternUnits","href","fileName","_jsxFileName","lineNumber","columnNumber","x","y","fill","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/RoomVisualizer/RoomVisualizer.jsx"],"sourcesContent":["import React from 'react';\n\nfunction RoomVisualizer({ roomData, floorImage }) {\n    // Assuming roomData contains dimensions in inches\n    const { width, length, doorPosition, windowWall, windowPosition } = roomData;\n\n    // Define the scale factor (1 inch = 10 SVG units)\n    const scaleFactor = 5;\n\n    // Door and window widths\n    const doorWidthInches = 32;\n    const windowWidthInches = 22;\n\n    // Convert inch measurements to SVG units\n    const roomWidth = width * scaleFactor;\n    const roomLength = length * scaleFactor;\n\n    // Calculate the width and height of the door and window proportionate to the room\n    const doorWidth = doorWidthInches * scaleFactor;\n    const doorHeight = 32 * scaleFactor; // Assuming door height is 80 inches, adjust as needed\n    const windowHeight = 2; // Height of the window line\n\n    return (\n        <svg width={roomWidth} height={roomLength}>\n            {/* Define a pattern with the floor image */}\n            <defs>\n                <pattern id=\"floorPattern\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n                    <image href={floorImage} width=\"100\" height=\"100\" />\n                </pattern>\n            </defs>\n\n            {/* Draw the floor rectangle with the floor image pattern */}\n            <rect x=\"0\" y=\"0\" width={roomWidth} height={roomLength} fill=\"url(#floorPattern)\" />\n\n            {/* Draw room walls */}\n            <rect x=\"0\" y=\"0\" width={roomWidth} height={roomLength} fill=\"transparent\" stroke=\"black\" strokeWidth=\"2\" />\n\n            {/* Draw door */}\n            <rect x=\"0\" y={doorPosition * scaleFactor} width={2 * scaleFactor} height={doorWidth} fill=\"brown\" />\n\n            {/* Draw windows */}\n            {windowWall === 'top' && (\n                <rect x={windowPosition * scaleFactor} y=\"0\" width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n            {windowWall === 'bottom' && (\n                <rect x={windowPosition * scaleFactor} y={roomLength - windowHeight} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n            {windowWall === 'left' && (\n                <rect x=\"0\" y={windowPosition * scaleFactor} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n            {windowWall === 'right' && (\n                <rect x={roomWidth - (windowWidthInches * scaleFactor)} y={windowPosition * scaleFactor} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n        </svg>\n    );\n}\n\nexport default RoomVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}