{"ast":null,"code":"var _jsxFileName = \"/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/RoomVisualizer/RoomVisualizer.jsx\";\nimport React from 'react';\nimport './RoomVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomVisualizer({\n  roomData\n}) {\n  // Assuming roomData contains dimensions in inches\n  const {\n    width,\n    length,\n    doorPosition,\n    windowWall,\n    windowPosition\n  } = roomData;\n\n  // Define the scale factor (1 inch = 10 SVG units)\n  const scaleFactor = 5;\n\n  // Door and window widths\n  const doorWidthInches = 32;\n  const doorThickness = 2;\n  const windowWidthInches = 22;\n\n  // Convert inch measurements to SVG units\n  const roomWidth = width * scaleFactor;\n  const roomLength = length * scaleFactor;\n\n  // Calculate the width and height of the door and window proportionate to the room\n  const doorWidth = doorWidthInches * scaleFactor;\n  const doorHeight = 32 * scaleFactor; // Assuming door height is 80 inches, adjust as needed\n  const windowHeight = 2; // Height of the window line\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: roomWidth,\n    height: roomLength,\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: roomWidth,\n      height: roomLength,\n      fill: \"lightgrey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: doorPosition * scaleFactor,\n      width: 2 * scaleFactor,\n      height: doorWidth,\n      fill: \"brown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), windowWall === 'top' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: windowPosition * scaleFactor,\n      y: \"0\",\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), windowWall === 'bottom' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: windowPosition * scaleFactor,\n      y: roomLength - windowHeight,\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), windowWall === 'left' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: windowPosition * scaleFactor,\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), windowWall === 'right' && /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: roomWidth - windowWidthInches * scaleFactor,\n      y: windowPosition * scaleFactor,\n      width: windowWidthInches * scaleFactor,\n      height: windowHeight,\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = RoomVisualizer;\nexport default RoomVisualizer;\nvar _c;\n$RefreshReg$(_c, \"RoomVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RoomVisualizer","roomData","width","length","doorPosition","windowWall","windowPosition","scaleFactor","doorWidthInches","doorThickness","windowWidthInches","roomWidth","roomLength","doorWidth","doorHeight","windowHeight","height","children","x","y","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/RoomVisualizer/RoomVisualizer.jsx"],"sourcesContent":["import React from 'react';\nimport './RoomVisualizer.css';\n\nfunction RoomVisualizer({ roomData }) {\n    // Assuming roomData contains dimensions in inches\n    const { width, length, doorPosition, windowWall, windowPosition } = roomData;\n\n    // Define the scale factor (1 inch = 10 SVG units)\n    const scaleFactor = 5;\n\n    // Door and window widths\n    const doorWidthInches = 32;\n    const doorThickness = 2;\n\n    const windowWidthInches = 22;\n\n    // Convert inch measurements to SVG units\n    const roomWidth = width * scaleFactor;\n    const roomLength = length * scaleFactor;\n\n    // Calculate the width and height of the door and window proportionate to the room\n    const doorWidth = doorWidthInches * scaleFactor;\n    const doorHeight = 32 * scaleFactor; // Assuming door height is 80 inches, adjust as needed\n    const windowHeight = 2; // Height of the window line\n\n    return (\n        <svg width={roomWidth} height={roomLength}>\n            {/* Draw room walls */}\n            <rect x=\"0\" y=\"0\" width={roomWidth} height={roomLength} fill=\"lightgrey\" />\n\n            {/* Draw door */}\n            <rect x=\"0\" y={doorPosition * scaleFactor} width={2 * scaleFactor} height={doorWidth} fill=\"brown\" />\n\n            {/* Draw windows */}\n            {windowWall === 'top' && (\n                <rect x={windowPosition * scaleFactor} y=\"0\" width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n            {windowWall === 'bottom' && (\n                <rect x={windowPosition * scaleFactor} y={roomLength - windowHeight} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n            {windowWall === 'left' && (\n                <rect x=\"0\" y={windowPosition * scaleFactor} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n            {windowWall === 'right' && (\n                <rect x={roomWidth - (windowWidthInches * scaleFactor)} y={windowPosition * scaleFactor} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n            )}\n        </svg>\n    );\n}\n\nexport default RoomVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}