{"ast":null,"code":"var _jsxFileName = \"/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/BedPlacement/BedPlacement.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BedPlacement({\n  bedLayout\n}) {\n  // Check if bedLayout is defined and contains coordinates\n  if (!bedLayout || !bedLayout.x || !bedLayout.y) {\n    return null; // Return null if coordinates are not defined\n  }\n\n  // Extract coordinates\n  const {\n    x,\n    y\n  } = bedLayout;\n\n  // Render the bed placement using the coordinates\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100\",\n      height: \"100\",\n      style: {\n        position: 'absolute',\n        left: x,\n        top: y\n      },\n      children: /*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"50\",\n        height: \"50\",\n        fill: \"brown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = BedPlacement;\nexport default BedPlacement;\n\n/*\n\nimport React from 'react';\n\nfunction BedPlacement({ bedLayout }) {\n    // Assuming bedLayout is an array of bed coordinates [x, y] for each bed\n    return (\n        <div>\n            {bedLayout.map((bedCoords, index) => (\n                <svg key={index} width=\"100\" height=\"100\" style={{ position: 'absolute', left: bedCoords[0], top: bedCoords[1] }}>\n                    {/* Render your bed SVG here \n                    <rect width=\"50\" height=\"50\" fill=\"brown\" />\n                </svg>\n            ))}\n        </div>\n    );\n}\n\nexport default BedPlacement;\n\n*/\nvar _c;\n$RefreshReg$(_c, \"BedPlacement\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BedPlacement","bedLayout","x","y","children","width","height","style","position","left","top","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/BedPlacement/BedPlacement.jsx"],"sourcesContent":["import React from 'react';\n\nfunction BedPlacement({ bedLayout }) {\n    // Check if bedLayout is defined and contains coordinates\n    if (!bedLayout || !bedLayout.x || !bedLayout.y) {\n        return null; // Return null if coordinates are not defined\n    }\n\n    // Extract coordinates\n    const { x, y } = bedLayout;\n\n    // Render the bed placement using the coordinates\n    return (\n        <div>\n            <svg width=\"100\" height=\"100\" style={{ position: 'absolute', left: x, top: y }}>\n                {/* Render your bed SVG here */}\n                <rect width=\"50\" height=\"50\" fill=\"brown\" />\n            </svg>\n        </div>\n    );\n}\n\nexport default BedPlacement;\n\n\n/*\n\nimport React from 'react';\n\nfunction BedPlacement({ bedLayout }) {\n    // Assuming bedLayout is an array of bed coordinates [x, y] for each bed\n    return (\n        <div>\n            {bedLayout.map((bedCoords, index) => (\n                <svg key={index} width=\"100\" height=\"100\" style={{ position: 'absolute', left: bedCoords[0], top: bedCoords[1] }}>\n                    {/* Render your bed SVG here \n                    <rect width=\"50\" height=\"50\" fill=\"brown\" />\n                </svg>\n            ))}\n        </div>\n    );\n}\n\nexport default BedPlacement;\n\n*/"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EACjC;EACA,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACC,CAAC,IAAI,CAACD,SAAS,CAACE,CAAC,EAAE;IAC5C,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA;EACA,MAAM;IAAED,CAAC;IAAEC;EAAE,CAAC,GAAGF,SAAS;;EAE1B;EACA,oBACIF,OAAA;IAAAK,QAAA,eACIL,OAAA;MAAKM,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,IAAI,EAAEP,CAAC;QAAEQ,GAAG,EAAEP;MAAE,CAAE;MAAAC,QAAA,eAE3EL,OAAA;QAAMM,KAAK,EAAC,IAAI;QAACC,MAAM,EAAC,IAAI;QAACK,IAAI,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACC,EAAA,GAlBQhB,YAAY;AAoBrB,eAAeA,YAAY;;AAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}