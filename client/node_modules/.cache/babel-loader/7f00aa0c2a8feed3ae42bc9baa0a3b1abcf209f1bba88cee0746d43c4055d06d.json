{"ast":null,"code":"var _jsxFileName = \"/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/RoomVisualizer/RoomVisualizer.jsx\";\nimport React from 'react';\nimport './RoomVisualizer.css';\nimport './images/WoodFloorPatterrn.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomVisualizer({\n  roomData\n}) {\n  // Assuming roomData contains dimensions in inches\n  const {\n    width,\n    length,\n    doorPosition,\n    windowWall,\n    windowPosition\n  } = roomData;\n\n  // Define the scale factor (1 inch = 10 SVG units)\n  const scaleFactor = 5;\n\n  // Door and window widths\n  const doorWidthInches = 32;\n  const doorThickness = 2;\n  const windowWidthInches = 22;\n\n  // Convert inch measurements to SVG units\n  const roomWidth = width * scaleFactor;\n  const roomLength = length * scaleFactor;\n\n  // Calculate the width and height of the door and window proportionate to the room\n  const doorWidth = doorWidthInches * scaleFactor;\n  const doorHeight = 32 * scaleFactor; // Assuming door height is 80 inches, adjust as needed\n  const windowHeight = 2; // Height of the window line\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-visualizer-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: roomWidth,\n      height: roomLength,\n      className: \"room-svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"0\",\n        y: \"0\",\n        width: roomWidth,\n        height: roomLength,\n        fill: \"lightgrey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: \"floorPattern\",\n          patternUnits: \"userSpaceOnUse\",\n          width: \"100\",\n          height: \"100\",\n          children: /*#__PURE__*/_jsxDEV(\"image\", {\n            xlinkHref: \"path_to_your_image.jpg\",\n            x: \"0\",\n            y: \"0\",\n            width: \"100\",\n            height: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"0\",\n        y: \"0\",\n        width: roomWidth,\n        height: roomLength,\n        fill: \"url(#floorPattern)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"0\",\n        y: doorPosition * scaleFactor,\n        width: 2 * scaleFactor,\n        height: doorWidth,\n        fill: \"brown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), windowWall === 'top' && /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: windowPosition * scaleFactor,\n        y: \"0\",\n        width: windowWidthInches * scaleFactor,\n        height: windowHeight,\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), windowWall === 'bottom' && /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: windowPosition * scaleFactor,\n        y: roomLength - windowHeight,\n        width: windowWidthInches * scaleFactor,\n        height: windowHeight,\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), windowWall === 'left' && /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"0\",\n        y: windowPosition * scaleFactor,\n        width: windowWidthInches * scaleFactor,\n        height: windowHeight,\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), windowWall === 'right' && /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: roomWidth - windowWidthInches * scaleFactor,\n        y: windowPosition * scaleFactor,\n        width: windowWidthInches * scaleFactor,\n        height: windowHeight,\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = RoomVisualizer;\nexport default RoomVisualizer;\nvar _c;\n$RefreshReg$(_c, \"RoomVisualizer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RoomVisualizer","roomData","width","length","doorPosition","windowWall","windowPosition","scaleFactor","doorWidthInches","doorThickness","windowWidthInches","roomWidth","roomLength","doorWidth","doorHeight","windowHeight","className","children","height","x","y","fill","fileName","_jsxFileName","lineNumber","columnNumber","id","patternUnits","xlinkHref","_c","$RefreshReg$"],"sources":["/Users/brentilejay/Projects/Spatial-Harmonies/client/src/components/RoomVisualizer/RoomVisualizer.jsx"],"sourcesContent":["import React from 'react';\nimport './RoomVisualizer.css';\nimport './images/WoodFloorPatterrn.jpeg'\n\nfunction RoomVisualizer({ roomData }) {\n    // Assuming roomData contains dimensions in inches\n    const { width, length, doorPosition, windowWall, windowPosition } = roomData;\n\n    // Define the scale factor (1 inch = 10 SVG units)\n    const scaleFactor = 5;\n\n    // Door and window widths\n    const doorWidthInches = 32;\n    const doorThickness = 2;\n\n    const windowWidthInches = 22;\n\n    // Convert inch measurements to SVG units\n    const roomWidth = width * scaleFactor;\n    const roomLength = length * scaleFactor;\n\n    // Calculate the width and height of the door and window proportionate to the room\n    const doorWidth = doorWidthInches * scaleFactor;\n    const doorHeight = 32 * scaleFactor; // Assuming door height is 80 inches, adjust as needed\n    const windowHeight = 2; // Height of the window line\n\n    return (\n        <div className=\"room-visualizer-container\"> {/* Container for centering */}\n\n            <svg \n                width={roomWidth} \n                height={roomLength}\n                className=\"room-svg\"\n            >\n\n                {/* Draw room walls */}\n                <rect x=\"0\" y=\"0\" width={roomWidth} height={roomLength} fill=\"lightgrey\" />\n\n                {/* Define the pattern */}\n                <defs>\n                    <pattern id=\"floorPattern\" patternUnits=\"userSpaceOnUse\" width=\"100\" height=\"100\">\n                        <image xlinkHref=\"path_to_your_image.jpg\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" />\n                    </pattern>\n                </defs>\n\n                {/* Apply the pattern to cover the floor */}\n                <rect x=\"0\" y=\"0\" width={roomWidth} height={roomLength} fill=\"url(#floorPattern)\" />\n    \n\n                {/* Draw door */}\n                <rect x=\"0\" y={doorPosition * scaleFactor} width={2 * scaleFactor} height={doorWidth} fill=\"brown\" />\n\n                {/* Draw windows */}\n                {windowWall === 'top' && (\n                    <rect x={windowPosition * scaleFactor} y=\"0\" width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n                )}\n                {windowWall === 'bottom' && (\n                    <rect x={windowPosition * scaleFactor} y={roomLength - windowHeight} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n                )}\n                {windowWall === 'left' && (\n                    <rect x=\"0\" y={windowPosition * scaleFactor} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n                )}\n                {windowWall === 'right' && (\n                    <rect x={roomWidth - (windowWidthInches * scaleFactor)} y={windowPosition * scaleFactor} width={windowWidthInches * scaleFactor} height={windowHeight} fill=\"blue\" />\n                )}\n            </svg>\n        </div>\n    );\n}\n\nexport default RoomVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}